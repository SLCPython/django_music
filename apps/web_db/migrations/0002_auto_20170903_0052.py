# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-03 00:52
from __future__ import unicode_literals
from collections import namedtuple

from django.db import migrations


MUSIC = [
            {
                'artist': 'Les Gordon',
                'title': 'Abyss',
                'year': '2016',
                'songs': [
                    {
                        'track': 1,
                        'title': 'Abyss',
                        'duration': '3:13'
                    },
                    {
                        'track': 2,
                        'title': 'Shiho & Kyoko',
                        'duration': '2:58'
                    },
                ]
            },
            {
                'artist': 'Same Gellaitry',
                'title': 'Escapism II',
                'year': '2016',
                'songs': [
                    {
                        'track': 1,
                        'title': 'The Gateway',
                        'duration': '3:12'
                    },
                    {
                        'track': 2,
                        'title': 'Desert Mirage',
                        'duration': '5:00'
                    },
                    {
                        'track': 3,
                        'title': 'Jacket Weather',
                        'duration': None
                    },
                    {
                        'track': 4,
                        'title': 'Static Sleep',
                        'duration': ''
                    }
                ]
            }
        ]


class Migration(migrations.Migration):

    dependencies = [
        ('web_db', '0001_initial'),
    ]

    def migrate_music(apps, schema_editor):
        Album = apps.get_model("web_db", "Album")
        Song = apps.get_model("web_db", "Song")
        for m in MUSIC:
            album = namedtuple('album', m.keys())(*m.values())
            new_album = Album.objects.create(
                title=album.title,
                year=album.year,
                artist=album.artist
            )
            for s in album.songs:
                song = namedtuple('song', s.keys())(*s.values())
                Song.objects.create(
                    title=song.title,
                    duration=song.duration or '',
                    track=song.track,
                    album=new_album
                )

    operations = [
        migrations.RunPython(migrate_music, migrations.RunPython.noop),
    ]
